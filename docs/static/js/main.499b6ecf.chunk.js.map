{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","type","value","onChange","target","GifGridItem","props","className","src","url","alt","title","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,uBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAI,gBACTN,EAAWO,OAAOC,OAAO,IACxBV,GAAc,SAAAW,GAAI,OAAGT,GAAH,mBAAiBS,OACnCR,EAAc,MAMlB,UAEI,8CACA,uBACIS,KAAK,OACLC,MAAOX,EACPY,SArBc,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,c,QCNlBG,EAAc,SAACC,GAExB,OADAV,QAAQC,IAAIS,GAER,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAMG,IAAKC,IAAKJ,EAAMK,QAChC,4BAAIL,EAAMK,Y,uBCPTC,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DACXL,EADW,iDACmCM,UAAUF,GAD7C,8DAEAG,MAAMP,GAFN,cAEXQ,EAFW,gBAGEA,EAAKC,OAHP,uBAGVC,EAHU,EAGVA,KACDC,EAAKD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACrB,MAAO,CACHC,GAAGD,EAAIC,GACPZ,MAAMW,EAAIX,MACVF,IAAG,UAACa,EAAIE,cAAL,aAAC,EAAYC,iBAAiBhB,QARxB,kBAWVW,GAXU,4CAAD,sDCIPM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAAc,ECDb,SAACA,GAAY,IAAD,EAERvB,mBAAS,CAC/B6B,KAAK,GACLQ,SAAQ,IAJsB,mBAE3BC,EAF2B,KAEpBC,EAFoB,KAqBlC,OAdAC,qBAAU,WAENlB,EAAQC,GACHkB,MAAK,SAAAC,GACFpC,QAAQC,IAAImC,GACZH,EAAS,CACLV,KAAKa,EACLL,SAAQ,SAKtB,CAACd,IAEIe,EDlBqBK,CAAapB,GAA7BW,EAFuB,EAE5BL,KAAYQ,EAFgB,EAEhBA,QAenB,OACI,eAAC,WAAD,WACI,oBAAIpB,UAAU,oCAAd,SAAmDM,IAClDc,GAAW,mBAAGpB,UAAU,mCAAb,uBACZ,sBAAKA,UAAU,YAAf,UACI,uBAEIiB,EAAOH,KAAI,SAAAC,GACP,OAAO,cAAC,EAAD,eAEHA,GADCA,EAAIC,cE3BpBW,EAAe,WAAO,IAAD,EAEM5C,mBAAS,CAAC,cAFhB,mBAEvB6C,EAFuB,KAEX9C,EAFW,KAU9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ8C,EAAWd,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MClB7BuB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.499b6ecf.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleInputChange = (e)=>{\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        console.log('submit hecho');\r\n        if(inputValue.trim().length>2){\r\n            setCategories(cats=>[inputValue,...cats]);\r\n            setinputValue('');\r\n        }\r\n            \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            \r\n            <h2>Add Category</h2>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n\r\n\r\n}\r\n\r\nAddCategory.propTypes ={\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n///tmb puedo des estructurar el props con {title,url}\r\nexport const GifGridItem = (props) => {\r\n    console.log(props);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={props.url} alt={props.title} />\r\n            <p>{props.title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs=async(category)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=5&api_key=B7hV9fziZvOvD9GoBfy2kXtlFegBbXfT`;\r\n    const resp=await fetch(url);\r\n    const {data}=await resp.json();\r\n    const gifs=data.map(img=>{\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React,{Fragment} from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from './../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images,loading}=useFetchGifs(category);\r\n    \r\n    // const [images, setImages] = useState([]);\r\n\r\n\r\n    // ///evita que se ejecute el getGifs infinitas veces\r\n    // useEffect(()=>{\r\n    //     getGifs(category)\r\n    //         .then(imgs=>setImages(imgs));\r\n    // },[category]);\r\n    ///agrego category ahi arriba xq puede ser que llegue a cambiar y me tira warningn\r\n\r\n\r\n    //getGifs();\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\"> loading </p>}\r\n            <div className=\"card-grid\">\r\n                <h3>{}</h3>\r\n                {\r\n                    images.map(img=>{\r\n                        return <GifGridItem \r\n                        key={img.id}\r\n                        {...img}/>\r\n                        })\r\n                    }\r\n            </div>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n","import {useState,useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs=(category)=>{\r\n\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n    ///.then es xq es una promesa, pero no puedo poner async\r\n    useEffect(()=>{\r\n\r\n        getGifs(category)\r\n            .then(imgs=>{\r\n                console.log(imgs);\r\n                setstate({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n\r\n            })\r\n\r\n    },[category]);\r\n\r\n    return state;//data[] y loading\r\n}","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport {GifGrid} from './components/GifGrid';\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['one punch']);\r\n\r\n    // const handleAdd = ()=>{\r\n    //     //setCategories([...categories,'Konosuba']);\r\n\r\n    //     setCategories(cats=>[...cats,'konosuba']);\r\n    // };\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    categories.map(category=>(\r\n                        <GifGrid\r\n                        key={category}\r\n                        category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}